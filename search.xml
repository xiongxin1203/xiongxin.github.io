<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[感谢reuixiy同学的hexo教程（转载）]]></title>
    <url>%2Fblog-hexo%2F2019%2F01%2F31%2FMyFirstBlog.html</url>
    <content type="text"><![CDATA[&#x4E00;&#x76F4;&#x60F3;&#x642D;&#x5EFA;&#x81EA;&#x5DF1;&#x7684;Blog&#xFF0C;&#x5374;&#x4E5F;&#x6CA1;&#x4EC0;&#x4E48;&#x65F6;&#x95F4;&#x5904;&#x7406;&#xFF0C;&#x6B63;&#x597D;&#x540C;&#x4E8B;&#x63A8;&#x8350;&#x4E86;hexo&#xFF0C;&#x518D;&#x52A0;&#x4E0A;&#x63A5;&#x8FD1;&#x5E74;&#x5173;&#x5DE5;&#x4F5C;&#x6CA1;&#x90A3;&#x4E48;&#x5FD9;&#x4E86;&#xFF0C;&#x82B1;&#x4E86;&#x4E00;&#x5929;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x7EC8;&#x4E8E;&#x642D;&#x5EFA;&#x597D;&#x4E86;&#x81EA;&#x5DF1;&#x7684;Blog&#x3002;&#x611F;&#x8C22;reuixiy&#x540C;&#x5B66;&#x7684;&#x6559;&#x7A0B;&#x3002;&#x4E5F;&#x63A8;&#x8350;&#x7ED9;&#x5927;&#x5BB6;&#xFF0C;&#x94FE;&#x63A5;&#x5728;&#x8FD9;&#x91CC;&#xFF1A;https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html#&#x76EE;&#x524D;&#x5BF9;hexo&#x7684;&#x7406;&#x89E3;&#x8FD8;&#x505C;&#x7559;&#x4E8E;&#x76AE;&#x6BDB;&#xFF0C;&#x51E0;&#x4E4E;&#x5C31;&#x662F;&#x7167;&#x7740;reuixiy&#x540C;&#x5B66;&#x7684;&#x535A;&#x5BA2;&#x7167;&#x6284;&#xFF0C;&#x6709;&#x7684;&#x8FD8;&#x6CA1;&#x6284;&#x4E0B;&#x6765;&#x3002;&#x5E0C;&#x671B;&#x540E;&#x9762;&#x6709;&#x65F6;&#x95F4;&#x53EF;&#x4EE5;&#x591A;&#x591A;&#x7814;&#x7A76;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>blog/hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java基于Springboot+gradle编写文件处理脚本]]></title>
    <url>%2Fblog-java%2F2019%2F01%2F31%2Ffile.html</url>
    <content type="text"><![CDATA[&#x524D;&#x8A00;&#x6700;&#x8FD1;&#x63A5;&#x5230;&#x4E00;&#x4E2A;&#x9700;&#x6C42;&#xFF0C;&#x8981;&#x5C06;&#x4E00;&#x6279;&#x591A;&#x5C42;&#x6B21;&#x6587;&#x4EF6;&#x5939;&#x91CC;&#x9762;&#x7684;&#x6587;&#x4EF6;&#x6839;&#x636E;&#x5176;&#x4E2D;&#x67D0;&#x4E00;&#x5C42;&#x5408;&#x5E76;&#x4E3A;&#x4E00;&#x4E2A;&#x4E2A;PDF&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x5C06;&#x6587;&#x4EF6;&#x4E0A;&#x4F20;&#x5230;&#x56FA;&#x5B9A;&#x7684;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#xFF0C;&#x8981;&#x6C42;&#x5904;&#x7406;&#x7684;&#x6587;&#x4EF6;&#x5305;&#x62EC;ppt&#xFF0C;excel&#xFF0C;word&#x4EE5;&#x53CA;&#x5404;&#x79CD;&#x56FE;&#x7247;&#x683C;&#x5F0F;&#xFF0C;&#x5176;&#x4E2D;&#x56FE;&#x7247;&#x683C;&#x5F0F;&#x8981;&#x6C42;&#x538B;&#x7F29;&#x3002;&#x56E0;&#x4E3A;&#x53EA;&#x662F;&#x811A;&#x672C;&#xFF0C;&#x6240;&#x4EE5;&#x57FA;&#x4E8E;&#x6700;&#x57FA;&#x7840;&#x7684;Springboot+gradle&#x6765;&#x6784;&#x5EFA;&#x6846;&#x67B6;&#x3002;&#x5E94;&#x7528;&#x5230;&#x7684;&#x4E3B;&#x8981;&#x6280;&#x672F;&#x6709;&#xFF1A; office&#x6587;&#x4EF6;&#x8F6C;pdfaspose(&#x6536;&#x8D39;) &#x56FE;&#x7247;&#x538B;&#x7F29;&#x7B49;&#x5BBD;&#x538B;&#x7F29;&#xFF08;&#x5B9E;&#x6D4B;&#x663E;&#x793A;&#x6548;&#x679C;&#x6BD4;&#x8F83;&#x597D;&#xFF0C;&#x4F46;&#x662F;&#x538B;&#x7F29;&#x5927;&#x5C0F;&#x4E0D;&#x662F;&#x5F88;&#x7406;&#x60F3;&#x3002;&#x9700;&#x6C42;&#x76F8;&#x53CD;&#x7684;&#x8BDD;&#x63A8;&#x8350;&#x7528;Thumbnails&#xFF09; &#x56FE;&#x7247;&#x8F6C;pdfitext pdf&#x5408;&#x6210;itext &#x56FE;&#x7247;&#x683C;&#x5F0F;&#x8F6C;&#x5316;jai&#xFF08;&#x90E8;&#x5206;&#x56FE;&#x7247;&#x683C;&#x5F0F;&#x7528;itext&#x8F6C;pdf&#x4F1A;&#x62A5;&#x9519;&#xFF0C;&#x5148;&#x8F6C;&#x5316;&#x4E3A;&#x5176;&#x4ED6;&#x683C;&#x5F0F;&#x518D;&#x8F6C;pdf&#xFF09; &#x8BFB;&#x53D6;excel&#x6587;&#x4EF6;poi &#x4E0A;&#x4F20;&#x6587;&#x4EF6;httpclient &#x8F93;&#x51FA;csv&#x6587;&#x4EF6;csv &#x6B63;&#x6587;office&#x6587;&#x4EF6;&#x8F6C;pdf&#x5E9F;&#x8BDD;&#x4E0D;&#x591A;&#x8BF4;&#xFF0C;&#x76F4;&#x63A5;&#x4E0A;&#x4EE3;&#x7801; /** * word&#x8F6C;PDF&#x7684;license&#x9A8C;&#x8BC1; * * @return boolean */ private boolean wordMatchLicense() { boolean result = false; InputStream is = TransToPdfService.class.getClassLoader().getResourceAsStream(&quot;license/license.xml&quot;); com.aspose.words.License wordLicense = new com.aspose.words.License(); try { wordLicense.setLicense(is); result = true; } catch (Exception e) { log.warn(&quot;&#x8F7D;&#x5165;word&#x6388;&#x6743;&#x6587;&#x4EF6;&#x5931;&#x8D25;&quot;); } return result; } /** * word&#x8F6C;PDF * * @param sourceFile File * @param targetFile File */ private void wordToPdf(File sourceFile, File targetFile) { FileOutputStream os = null; try { os = new FileOutputStream(targetFile); Document doc = new Document(sourceFile.getAbsolutePath()); doc.save(os, com.aspose.words.SaveFormat.PDF); } catch (FileNotFoundException e) { log.error(&quot;&#x8F93;&#x51FA;&#x5230;&quot; + targetFile.getAbsolutePath() + &quot;&#x9519;&#x8BEF;:&quot; + e); } catch (Exception e) { log.error(&quot;&#x8F6C;&#x6362;word&#x51FA;&#x9519;:&quot; + e); } finally { if (os != null) { try { os.close(); } catch (IOException e) { log.error(&quot;&#x5173;&#x95ED;&#x8F93;&#x51FA;&#x6D41;&#x51FA;&#x9519;:&quot; + e); } } } } /** * ppt&#x8F6C;PDF&#x7684;license&#x9A8C;&#x8BC1; * * @return boolean */ private boolean pptMatchLicense() { boolean result = false; InputStream is = TransToPdfService.class.getClassLoader().getResourceAsStream(&quot;license/license.xml&quot;); com.aspose.slides.License pptLicense = new com.aspose.slides.License(); try { pptLicense.setLicense(is); result = true; } catch (Exception e) { log.warn(&quot;&#x8F7D;&#x5165;ppt&#x6388;&#x6743;&#x6587;&#x4EF6;&#x5931;&#x8D25;&quot;); } return result; } /** * ppt&#x8F6C;PDF * * @param sourceFile File * @param targetFile File */ private void pptToPdf(File sourceFile, File targetFile) { FileOutputStream fileOS = null; InputStream slides = null; try { slides = new FileInputStream(sourceFile); Presentation pres = new Presentation(slides); File pptFile = new File(targetFile.getAbsolutePath()); fileOS = new FileOutputStream(pptFile); pres.save(fileOS, com.aspose.slides.SaveFormat.Pdf); } catch (FileNotFoundException e) { log.error(&quot;&#x6587;&#x4EF6;&#x672A;&#x627E;&#x5230;:&quot; + e); } finally { try { if (fileOS != null) { fileOS.close(); } if (slides != null) { slides.close(); } } catch (IOException e) { log.error(&quot;&#x5173;&#x95ED;&#x8F93;&#x51FA;&#x6D41;&#x51FA;&#x9519;:&quot; + e); } } } /** * excel&#x8F6C;&#x6362;&#x7684;license&#x9A8C;&#x8BC1; * * @return boolean */ private boolean exlMatchLicense() { boolean result = false; InputStream is = TransToPdfService.class.getClassLoader().getResourceAsStream(&quot;license/license.xml&quot;); com.aspose.cells.License excelLicense = new com.aspose.cells.License(); try { excelLicense.setLicense(is); result = true; } catch (Exception e) { log.warn(&quot;&#x8F7D;&#x5165;excel&#x6388;&#x6743;&#x6587;&#x4EF6;&#x5931;&#x8D25;&quot;); } return result; } /** * excel&#x8F6C;PDF * * @param sourceFile File * @param targetFile File */ private void exlToPdf(File sourceFile, File targetFile) { FileOutputStream fileOs = null; Workbook wb; try { fileOs = new FileOutputStream(targetFile); wb = new Workbook(sourceFile.getAbsolutePath()); WorksheetCollection worksheets = wb.getWorksheets(); for (Object o : worksheets) { Worksheet worksheet = (Worksheet) o; Cells cells = worksheet.getCells(); int rowCount = cells.getMaxDataRow() + 1; //&#x5B58;&#x5728;&#x6570;&#x636E;&#x7684;&#x6700;&#x5927;&#x884C;&#x6570; int columnCount = cells.getMaxDataColumn() + 1; //&#x5B58;&#x5728;&#x6570;&#x636E;&#x7684;&#x6700;&#x5927;&#x5217;&#x6570; int allRowCount = cells.getMaxRow() + 1; //&#x6700;&#x5927;&#x884C;&#x6570; int allColumnCount = cells.getMaxColumn() + 1; //&#x6700;&#x5927;&#x5217;&#x6570; cells.unhideRows(0, rowCount, 18); //&#x53D6;&#x6D88;&#x9690;&#x85CF; cells.deleteRows(rowCount, (allRowCount - rowCount)); //&#x884C;&#x622A;&#x53D6; cells.deleteColumns(columnCount, (allColumnCount - columnCount), false); //&#x5217;&#x622A;&#x53D6; } wb.save(fileOs, com.aspose.cells.SaveFormat.PDF); } catch (FileNotFoundException e) { log.error(&quot;&#x8F93;&#x51FA;&#x5230;&quot; + targetFile.getAbsolutePath() + &quot;&#x9519;&#x8BEF;:&quot; + e); } catch (Exception e) { log.error(&quot;&#x8F6C;&#x6362;excel&#x51FA;&#x9519;:&quot; + e); } finally { if (fileOs != null) { try { fileOs.close(); } catch (IOException e) { log.error(&quot;&#x5173;&#x95ED;&#x8F93;&#x51FA;&#x6D41;&#x51FA;&#x9519;:&quot; + e); } } } } &#x8FD9;&#x4E09;&#x4E2A;office&#x6587;&#x4EF6;&#x8F6C;&#x6362;&#x601D;&#x60F3;&#x90FD;&#x662F;&#x4EE5;&#x6D41;&#x7684;&#x5F62;&#x5F0F;&#x4F20;&#x8F93;&#x8F6C;&#x6362;&#x4E3A;&#x4E00;&#x4E2A;&#x4E2D;&#x95F4;&#x6587;&#x4EF6;&#xFF0C;&#x6700;&#x540E;&#x540C;&#x6837;&#x4EE5;&#x6D41;&#x7684;&#x5F62;&#x5F0F;&#x8F6C;&#x5316;&#x4E3A;pdf&#x6587;&#x4EF6;&#x3002; info&#x5728;excel&#x90E8;&#x5206;&#x4F1A;&#x6709;&#x6240;&#x4E0D;&#x540C;&#xFF0C;excel&#x7ECF;&#x5E38;&#x4F1A;&#x78B0;&#x5230;&#x5927;&#x91CF;&#x7A7A;&#x683C;&#x7684;&#x73B0;&#x8C61;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x901A;&#x8FC7;&#x622A;&#x53D6;&#x7684;&#x5F62;&#x5F0F;&#x6765;&#x7F29;&#x5C0F;&#x5BFC;&#x51FA;&#x8303;&#x56F4;excel&#x8FD8;&#x5B58;&#x5728;&#x884C;&#x5217;&#x9690;&#x85CF;&#x7684;&#x60C5;&#x51B5;&#xFF0C;aspose&#x9ED8;&#x8BA4;&#x662F;&#x4E0D;&#x4F1A;&#x8BFB;&#x51FA;&#x9690;&#x85CF;&#x6570;&#x636E;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x9700;&#x8981;&#x5BFC;&#x51FA;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x7528;&#x5230;unhide&#x65B9;&#x6CD5; default primary success info warning danger1. document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>blog/java</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Funcategorized%2F2019%2F01%2F29%2Fhello-world.html</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
  </entry>
</search>
